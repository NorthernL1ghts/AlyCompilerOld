; This is a comment. It will end at the newline.
# This is also a comment.

; This is a variable declaration with initialization.

a : integer = 69

; This is a variable re-assignment.
a := 420

; This is another variable declaration and re-assignment.
; When a declaration has no initialized value, it is zero.
b : integer
b := 42

; This is an error! We should catch this as a variable re-definition.
;b : integer

; This is a function definition with two integer arugments that returns
; an integer.
defun foo (c:integer, b:integer):integer {
  c := 10
  c := 5
  c := 42
  c := 69
  c := 420
  c := 69
}

; This is a function call.
; For now, this errors because we no do function calls :^(
foo(20, 34)

; TODO: Support this lambda syntax!
;[integer (a:integer) { a := 25  a }]

; TODO: Allow function assignment or something
;bar : function = [integer (x:integer) { x }]

; TODO: Shorthand for function assignment
;baz : [ integer (x:integer) { x } ]